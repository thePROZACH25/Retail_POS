{"ast":null,"code":"var _jsxFileName = \"/Users/ZachLedford/Desktop/Final Project/final-project/client/src/components/ValidationTextFields.js\";\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from 'react-redux'; // import { makeStyles } from \"@material-ui/core/styles\";\n\nimport { signInUser } from \"../authActions\"; // const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: 200,\n//     },\n//   },\n// }));\n\nclass ValidationTextFields extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      e.preventDefault();\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const user = {\n        employeeNum: this.state.employeeNum,\n        password: this.state.password\n      };\n      this.props.signInUser; // signInUser(user).then((res) => {\n      //   console.log(res);\n      // });\n    };\n\n    this.state = {\n      name: \"\",\n      employeeNum: \"\",\n      password: \"\",\n      gradeLv: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // const [value, setValue] = useState({\n  //   name: \"\",\n  //   employeeNum: \"\",\n  //   password: \"\",\n  //   gradeLv: \"\",\n  // });\n  // handleChange = (e) => {\n  //   // console.log(e.target.name);\n  //   setValue({\n  //     [e.target.name]: e.target.value,\n  //   });\n  //   console.log(\"handleChange\");\n  // };\n\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    // const classes = useStyles();\n    return /*#__PURE__*/React.createElement(\"form\", {\n      // className={classes.root}\n      // onSubmit={handleSubmit}\n      noValidate: true,\n      autoComplete: \"off\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"emplNum\",\n      onChange: this.handleChange,\n      type: \"input\",\n      name: \"employeeNum\",\n      label: \"Employee #\",\n      value: this.state.employeeNum,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"password\",\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      id: \"button\",\n      onClick: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"Default\"));\n  }\n\n} // ValidationTextFields.propTypes = {\n//   signInUser: PropTypes.func.isRequired,\n// };\n// export default ValidationTextFields;\n\n\nValidationTextFields.propTypes = {\n  signInUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  signInUser\n})(ValidationTextFields);","map":{"version":3,"sources":["/Users/ZachLedford/Desktop/Final Project/final-project/client/src/components/ValidationTextFields.js"],"names":["React","PropTypes","TextField","Button","connect","signInUser","ValidationTextFields","Component","constructor","props","handleChange","e","preventDefault","setState","target","name","value","handleSubmit","user","employeeNum","state","password","gradeLv","bind","componentDidMount","auth","isAuthenticated","history","push","componentWillReceiveProps","nextProps","errors","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from 'react-redux';\n// import { makeStyles } from \"@material-ui/core/styles\";\nimport { signInUser } from \"../authActions\";\n\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     \"& .MuiTextField-root\": {\n//       margin: theme.spacing(1),\n//       width: 200,\n//     },\n//   },\n// }));\n\nclass ValidationTextFields extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      employeeNum: \"\",\n      password: \"\",\n      gradeLv: \"\",\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  // const [value, setValue] = useState({\n  //   name: \"\",\n  //   employeeNum: \"\",\n  //   password: \"\",\n  //   gradeLv: \"\",\n  // });\n\n  // handleChange = (e) => {\n  //   // console.log(e.target.name);\n  //   setValue({\n  //     [e.target.name]: e.target.value,\n  //   });\n  //   console.log(\"handleChange\");\n  // };\n\n  componentDidMount() {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const user = {\n      employeeNum: this.state.employeeNum,\n      password: this.state.password,\n    };\n    this.props.signInUser\n    // signInUser(user).then((res) => {\n    //   console.log(res);\n    // });\n  };\n  render() {\n    // const classes = useStyles();\n    return (\n      <form\n        // className={classes.root}\n        // onSubmit={handleSubmit}\n        noValidate\n        autoComplete=\"off\"\n      >\n        <div>\n          <TextField\n            id=\"emplNum\"\n            onChange={this.handleChange}\n            type=\"input\"\n            name=\"employeeNum\"\n            label=\"Employee #\"\n            value={this.state.employeeNum}\n            variant=\"outlined\"\n          />\n          <TextField\n            id=\"password\"\n            onChange={this.handleChange}\n            name=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            value={this.state.password}\n            variant=\"outlined\"\n          />\n        </div>\n        <Button variant=\"contained\" id=\"button\" onClick={this.handleSubmit}>\n          Default\n        </Button>\n      </form>\n    );\n  }\n}\n\n// ValidationTextFields.propTypes = {\n//   signInUser: PropTypes.func.isRequired,\n// };\n\n// export default ValidationTextFields;\n\nValidationTextFields.propTypes = {\n  signInUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { signInUser }\n)(ValidationTextFields);"]},"metadata":{},"sourceType":"module"}